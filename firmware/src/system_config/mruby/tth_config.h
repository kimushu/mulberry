/*
 * This file was generated by MPLAB Harmony Configurator.
 * DO NOT EDIT THIS FILE MANUALLY.
 */
#ifndef __TTH_CONFIG_H__
#define __TTH_CONFIG_H__

#ifndef __LANGUAGE_ASSEMBLY__
# include <stdint.h>
#endif

/*
 * +-------------------------------------------------------------------------+
 * |                           Configuration table                           |
 * +----------------------------+--------------------------------------------+
 * | Feature                    | Configration                               |
 * +----------------------------+--------------------------------------------+
 * | pthread_cond_* APIs        | Disabled                                   |
 * | pthread_mutex_* APIs       | Enabled                                    |
 * | sem_* APIs                 | Enabled                                    |
 * | pthread_rwlock_* APIs      | Disabled                                   |
 * | pthread_spin_* APIs        | Disabled                                   |
 * | sleep, usleep APIs         | Enabled                                    |
 * | Profiling                  | Disabled                                   |
 * | Shadow registers           | Used for context switch                    |
 * | FPU in threads             | Enabled (Delayed switch)                   |
 * | FPU in ISRs                | Disabled                                   |
 * | DSP in threads             | Enabled (Instant switch)                   |
 * | DSP in ISRs                | Enabled (Instant switch)                   |
 * +----------------------------+--------------------------------------------+
 */

/*
 * +-------------------------------------------------------------------------+
 * |                          Context saving rules                           |
 * +--------+-------------------------+--------------------------------------+
 * | Owner  | Data                    | Where to save                        |
 * +--------+-------------------------+--------------------------------------+
 * | Thread | Temporary GPRs          | Each shadow register set             |
 * | Thread | Preserved GPRs          | Each shadow register set             |
 * | Thread | PC                      | ISTACK[0].CP0                        |
 * | Thread | Status                  | ISTACK[0].CP0                        |
 * | Thread | SRSctl                  | ISTACK[0].CP0                        |
 * | Thread | Accumulators            | ISTACK[0].ACC                        |
 * | Thread | Temporary FPU registers | TCTX.FPUt           (Delayed switch) |
 * | Thread | Preserved FPU registers | TCTX.FPUp           (Delayed switch) |
 * | Thread | DSP registers           | ISTACK[0].DSP                        |
 * | Thread | _impure_ptr             | TCTX.reent                           |
 * +--------+-------------------------+--------------------------------------+
 * | ISR[n] | Temporary GPRs          | ISTACK[n+1].GPRt                     |
 * | ISR[n] | PC                      | ISTACK[n+1].CP0                      |
 * | ISR[n] | Status                  | ISTACK[n+1].CP0                      |
 * | ISR[n] | SRSctl                  | ISTACK[n+1].CP0                      |
 * | ISR[n] | Accumulators            | ISTACK[n+1].ACC                      |
 * | ISR[n] | All FPU registers       | N/A                (Disabled in ISR) |
 * | ISR[n] | DSP registers           | ISTACK[n+1].DSP                      |
 * +--------+-------------------------+--------------------------------------+
 *  (n = interrupt level (0..N))
 */

#define TTHREAD_HAS_SRS                 1
#define TTHREAD_HAS_FPU                 1
#define TTHREAD_HAS_DSP                 1

#define TTHREAD_ENABLE_COND             0
#define TTHREAD_ENABLE_MUTEX            1
#define TTHREAD_ENABLE_SEM              1
#define TTHREAD_ENABLE_ONCE             0
#define TTHREAD_ENABLE_RWLOCK           0
#define TTHREAD_ENABLE_SPIN             0
#define TTHREAD_ENABLE_SLEEP            1
#define TTHREAD_ENABLE_PROF             0
#define TTHREAD_ENABLE_NAME             1

#define TTHREAD_PREEMPTION_ENABLE       1
#define TTHREAD_PREEMPTION_INTERVAL     10ul

#define TTHREAD_TIMER_IPL               1
#define TTHREAD_TIMER_IPL_ID            ipl1AUTO
#define TTHREAD_TIMER_SUB_IPL           0
#define TTHREAD_CPU_CLOCK_HZ            200000000ul
#define TTHREAD_TIMER_PERIPHERAL_ID     0
#define TTHREAD_TIMER_IRQ               _CORE_TIMER_VECTOR
#define TTHREAD_TIMER_CLOCK_HZ          (TTHREAD_CPU_CLOCK_HZ / 2)
#define TTHREAD_TIMER_RESOLUTION_US     1000ul
#define TTHREAD_TICKS_PER_SEC           (1000000ul / TTHREAD_TIMER_RESOLUTION_US)

#define SCHED_PRIORITY_MAX              99
#define SCHED_PRIORITY_MIN              1
#define SCHED_PRIORITY_DEFAULT          10
#define SCHED_POLICY_DEFAULT_FF         0
#define PTHREAD_STACK_MIN_OVERRIDE      4096

#define TTHREAD_THREAD_SAFE_NEWLIB      1
#define TTHREAD_ENABLE_ASSERTION        0
#define TTHREAD_ENABLE_WAIT_IN_IDLE     1

#define TTHREAD_ENABLE_SRS              1

#define TTHREAD_FPU_DELAYED_SWITCH      1
#define TTHREAD_FPU_INSTANT_SWITCH      0
#define TTHREAD_FPU_DISALLOW_IN_ISR     1
#define TTHREAD_FPU_DELAYED_IN_ISR      (TTHREAD_FPU_DELAYED_SWITCH && !TTHREAD_FPU_DISALLOW_IN_ISR)
#define TTHREAD_DSP_DELAYED_SWITCH      0
#define TTHREAD_DSP_INSTANT_SWITCH      1
#define TTHREAD_DSP_DISALLOW_IN_ISR     0
#define TTHREAD_DSP_DELAYED_IN_ISR      (TTHREAD_DSP_DELAYED_SWITCH && !TTHREAD_DSP_DISALLOW_IN_ISR)

#ifndef __LANGUAGE_ASSEMBLY__
typedef struct {
  struct {
    uint32_t EPC;
    uint32_t Status;
    uint32_t SRSctl;
  } CP0;
  struct {
    uint32_t at;
    uint32_t v0, v1;
    uint32_t a0, a1, a2, a3;
    uint32_t t0, t1, t2, t3, t4, t5, t6, t7, t8, t9;
    uint32_t ra;
  } GPRt;
  struct {
    uint32_t Lo, Hi;
  } ACC;
  struct {
    uint32_t Lo1, Hi1;
    uint32_t Lo2, Hi2;
    uint32_t Lo3, Hi3;
    uint32_t DSPControl;
  } DSP;
} __attribute__(( aligned(8) )) tth_arch_isr_stack;
#endif  /* !defined(__LANGUAGE_ASSEMBLY__) */

#define TTHREAD_ISTACK_OFF_EPC          0
#define TTHREAD_ISTACK_OFF_STATUS       4
#define TTHREAD_ISTACK_OFF_SRSCTL       8
#define TTHREAD_ISTACK_OFF_GPR_AT       12
#define TTHREAD_ISTACK_OFF_GPR_V0       16
#define TTHREAD_ISTACK_OFF_GPR_V1       20
#define TTHREAD_ISTACK_OFF_GPR_A0       24
#define TTHREAD_ISTACK_OFF_GPR_A1       28
#define TTHREAD_ISTACK_OFF_GPR_A2       32
#define TTHREAD_ISTACK_OFF_GPR_A3       36
#define TTHREAD_ISTACK_OFF_GPR_T0       40
#define TTHREAD_ISTACK_OFF_GPR_T1       44
#define TTHREAD_ISTACK_OFF_GPR_T2       48
#define TTHREAD_ISTACK_OFF_GPR_T3       52
#define TTHREAD_ISTACK_OFF_GPR_T4       56
#define TTHREAD_ISTACK_OFF_GPR_T5       60
#define TTHREAD_ISTACK_OFF_GPR_T6       64
#define TTHREAD_ISTACK_OFF_GPR_T7       68
#define TTHREAD_ISTACK_OFF_GPR_T8       72
#define TTHREAD_ISTACK_OFF_GPR_T9       76
#define TTHREAD_ISTACK_OFF_GPR_RA       80
#define TTHREAD_ISTACK_OFF_ACC_LO       84
#define TTHREAD_ISTACK_OFF_ACC_HI       88
#define TTHREAD_ISTACK_OFF_DSP_LO1      92
#define TTHREAD_ISTACK_OFF_DSP_HI1      96
#define TTHREAD_ISTACK_OFF_DSP_LO2      100
#define TTHREAD_ISTACK_OFF_DSP_HI2      104
#define TTHREAD_ISTACK_OFF_DSP_LO3      108
#define TTHREAD_ISTACK_OFF_DSP_HI3      112
#define TTHREAD_ISTACK_OFF_DSP_CTRL     116
#define TTHREAD_ISTACK_SIZE             120

#ifndef __LANGUAGE_ASSEMBLY__
typedef struct {
  tth_arch_isr_stack isr;
} __attribute__(( aligned(8) )) tth_arch_thread_stack;
#endif  /* !defined(__LANGUAGE_ASSEMBLY__) */

#define TTHREAD_TSTACK_SIZE             0

#ifndef __LANGUAGE_ASSEMBLY__
typedef struct {
  tth_arch_isr_stack isr;
} __attribute__(( aligned(8) )) tth_arch_isr_context;
#endif  /* !defined(__LANGUAGE_ASSEMBLY__) */

#define TTHREAD_ICTX_SIZE               0

#ifndef __LANGUAGE_ASSEMBLY__
typedef struct {
  tth_arch_thread_stack *sp;
  struct {
    uint32_t FCSR;
    uint32_t f0lo, f0hi;
    uint32_t f1lo, f1hi;
    uint32_t f2lo, f2hi;
    uint32_t f3lo, f3hi;
    uint32_t f4lo, f4hi;
    uint32_t f5lo, f5hi;
    uint32_t f6lo, f6hi;
    uint32_t f7lo, f7hi;
    uint32_t f8lo, f8hi;
    uint32_t f9lo, f9hi;
    uint32_t f10lo, f10hi;
    uint32_t f11lo, f11hi;
    uint32_t f12lo, f12hi;
    uint32_t f13lo, f13hi;
    uint32_t f14lo, f14hi;
    uint32_t f15lo, f15hi;
    uint32_t f16lo, f16hi;
    uint32_t f17lo, f17hi;
    uint32_t f18lo, f18hi;
    uint32_t f19lo, f19hi;
  } FPUt;
  struct {
    uint32_t f20lo, f20hi;
    uint32_t f21lo, f21hi;
    uint32_t f22lo, f22hi;
    uint32_t f23lo, f23hi;
    uint32_t f24lo, f24hi;
    uint32_t f25lo, f25hi;
    uint32_t f26lo, f26hi;
    uint32_t f27lo, f27hi;
    uint32_t f28lo, f28hi;
    uint32_t f29lo, f29hi;
    uint32_t f30lo, f30hi;
    uint32_t f31lo, f31hi;
  } FPUp;
  void *reent;
  uint32_t srs;
} __attribute__(( aligned(8) )) tth_arch_context;
#endif  /* !defined(__LANGUAGE_ASSEMBLY__) */

#define TTHREAD_TCTX_OFF_SP             0
#define TTHREAD_TCTX_OFF_FPU_FCSR       4
#define TTHREAD_TCTX_OFF_FPU_F0         8
#define TTHREAD_TCTX_OFF_FPU_F1         16
#define TTHREAD_TCTX_OFF_FPU_F2         24
#define TTHREAD_TCTX_OFF_FPU_F3         32
#define TTHREAD_TCTX_OFF_FPU_F4         40
#define TTHREAD_TCTX_OFF_FPU_F5         48
#define TTHREAD_TCTX_OFF_FPU_F6         56
#define TTHREAD_TCTX_OFF_FPU_F7         64
#define TTHREAD_TCTX_OFF_FPU_F8         72
#define TTHREAD_TCTX_OFF_FPU_F9         80
#define TTHREAD_TCTX_OFF_FPU_F10        88
#define TTHREAD_TCTX_OFF_FPU_F11        96
#define TTHREAD_TCTX_OFF_FPU_F12        104
#define TTHREAD_TCTX_OFF_FPU_F13        112
#define TTHREAD_TCTX_OFF_FPU_F14        120
#define TTHREAD_TCTX_OFF_FPU_F15        128
#define TTHREAD_TCTX_OFF_FPU_F16        136
#define TTHREAD_TCTX_OFF_FPU_F17        144
#define TTHREAD_TCTX_OFF_FPU_F18        152
#define TTHREAD_TCTX_OFF_FPU_F19        160
#define TTHREAD_TCTX_OFF_FPU_F20        168
#define TTHREAD_TCTX_OFF_FPU_F21        176
#define TTHREAD_TCTX_OFF_FPU_F22        184
#define TTHREAD_TCTX_OFF_FPU_F23        192
#define TTHREAD_TCTX_OFF_FPU_F24        200
#define TTHREAD_TCTX_OFF_FPU_F25        208
#define TTHREAD_TCTX_OFF_FPU_F26        216
#define TTHREAD_TCTX_OFF_FPU_F27        224
#define TTHREAD_TCTX_OFF_FPU_F28        232
#define TTHREAD_TCTX_OFF_FPU_F29        240
#define TTHREAD_TCTX_OFF_FPU_F30        248
#define TTHREAD_TCTX_OFF_FPU_F31        256
#define TTHREAD_TCTX_OFF_REENT          264
#define TTHREAD_TCTX_OFF_SRS            268
#define TTHREAD_TCTX_SIZE               272

#endif  /* __TTH_CONFIG_H__ */
